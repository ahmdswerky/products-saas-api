name: Deploy to Server

env:
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

on:
  push:
    branches:
      - main

jobs:
  tests:

    runs-on: ubuntu-latest
    #services:
    #  mysql:
    #    image: mysql:5.7
    #    env:
    #      MYSQL_ALLOW_EMPTY_PASSWORD: yes
    #      MYSQL_DATABASE: test_db
    #    ports:
    #      - 3306
    #    options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.0'
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.ci', '.env');"
    - name: Install Dependenciess
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Clear cache
      run: php artisan config:clear
    - run: cat .env
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Run Database Migrations
      run: php artisan migrate --path=database/database.sqlite
    - name: Install Passport
      run: php artisan passport:keys
    - name: Execute tests (Unit and Feature tests) via Pest
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      #run: php artisan test --no-interaction
      run: ./vendor/bin/pest --coverage --ci

  deploy:
    needs: [ tests ]

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2
    - run: php -r "file_exists('.env') || copy('.env.production', '.env');"
    - run: php -r "file_exists('.env.example') || rm -rf .env.example;"
    - run: php -r "file_exists('.env.production') || rm -rf .env.production;"
    - run: sed -i -E "s/(DB_USERNAME=.+)/DB_USERNAME=$DB_USERNAME/g" .env
    - run: sed -i -E "s/(DB_PASSWORD=.+)/DB_PASSWORD=$DB_PASSWORD/g" .env
    - run: composer install --no-interaction
    - run: composer dump-autoload
    - run: php artisan key:generate
    - run: php artisan cache:clear
    - run: php artisan config:clear
    - run: php artisan optimize:clear
    - run: php artisan migrate --force
    - run: php artisan db:seed --force --class=EssentialSeeder
    #- run: php artisan app:setup
    - run: php artisan config:cache
    - run: php artisan route:cache
    - run: php artisan storage:link
    - run: php artisan cache:table
    - run: php artisan clear-compiled
    - run: php artisan optimize
    - run: ls -al
